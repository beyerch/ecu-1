ECU(Spark advance + Fuel injection) design
INCLUDE:
	table.h
		VE table
		SA table
	avr/io.h
	avr/interrupt.h
DEFINES:
	MAP PIN
	RPM PIN
	FUEL PIN
	SPARK PIN
	DWELLTIME (time it takes for spark to charge)
	FUELTIME (fuel released per unit time)
	DISTANCE (angle between teeth )

GLOBAL VARIABLES:
	angle (Real or approx) (0 -> 2pi || 0 -> 360)
	last time (time between last know tics)
	TAC (tooth count)
	avg time between pin interrupt
	//mean difference between times
	
	doSpark
		desired angle (to do spark at)
	doFuel
		fuel amount
MAIN:
	setup:
		set avg to zero
		initialize timers
		sei(); //enable interrupts
		TAC = 0;
		avgTime = 0;
		angle = 0;
		doFuel = 0;
		doSpark = 0;
	loop:
		read pins
			get RPM
			get MAP
		convert pin values to relevant RPM and MAP values (equation?)

		avgTime = (last time + avgTime) / 2;
		TAC(last time > (avgTime + deviation allowable))? 0 : TAC;
		angle = TAC * (distance between teeth) + distance between missing tooth; 

		// == 0 means that it is not already running
		if(doFuel == 0) 
			table lookup(VE table, RPM, MAP)

			get air volume from table //air volume

			fuel amount (equation for air volume by mass of air) / 14.7

			set doFuel 1
		if(doSpark == 0)
			table lookup (SA table, RPM, MAP)

			get location of ideal spark //angle in degrees 
			set desired angle
			set doSpark 1

ISR1(fuel injection):
	(if doFuel 1)
		open injector (set pin)
		delay for fuelAmmount (set counter)
		set doFuel 2
	else if(doFuel 2)
		//fueling is done
		close injector
		set doFuel 0;


ISR2(spark advance):
	(if doSpark)
		time till angle = (desired angle - angle) * avg time between angles
		if ((dwell time - time till angle) <=  (allowed offset) )
			start charging spark
			delay for dwell time (set counter)
			set doSpark 2
		else
			delay (time till angle + (allowed offset) - dwell time) (set counter)
	else if (doSpark 2)
		//spark is released
		stop charging spark
		set doSpark 0;

ISR3(pin interrupt):
	time = read counter
	timer counter = 0
	last time = time
	TAC++;