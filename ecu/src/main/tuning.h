/*
 *  Name: tuning.h
 *  Author: Ivan Pachev 
 *  Edited by: Alex Pink & Dorian Capps
 *
 *  Description:
 *  Fuel maps for the Honda GX35. Taken from Eco Trons tuning software.
 *
 *  Note to the programmer:
 *  Please use Arduino IDE to compile / upload sketches! To use the built-in
 *  Arduino libraries, the IDE must be used. The Makefile and code directory
 *  structure is too convoluted to use.
 *
 *  TODO LIST:
 *  get fuel maps from Eco Trons
 */

#include "table.h"
/* The following is table data.
   Each section contains table data,
   as well a list of numbers for each axis.
   This is the section where we would "tune" the ECU. */

#define X_AXIS_VE_WIDTH 12
#define X_AXIS_SA_WIDTH 14

// yAxis values are in kPa
float yAxisVE[] = {30, 35, 40, 43, 46, 50, 55, 60, 65, 70, 75, 80, 85, 90, 97, 105}; // [kPa]

// xAxis values are in RPM
float xAxisVE[] = {1200, 1400, 1650, 2000, 2500, 3000, 3500, 4000, 5000, 6000, 7000, 8000}; // [RPM]

// VE data is in % [0.00 to 1.00]
float dataVE[][X_AXIS_VE_WIDTH] = {
   {0.4627, 0.4837, 0.5037, 0.5237, 0.5437, 0.5639, 0.5898, 0.6041, 0.6204, 0.6471, 0.6422, 0.6473},
   {0.5093, 0.5293, 0.5283, 0.5663, 0.5863, 0.6037, 0.6246, 0.6412, 0.6667, 0.6841, 0.6848, 0.6839},
   {0.5419, 0.5619, 0.5819, 0.6019, 0.6219, 0.6441, 0.6673, 0.6857, 0.7051, 0.7218, 0.7247, 0.7258},
   {0.5962, 0.5992, 0.6262, 0.6462, 0.6662, 0.6892, 0.7071, 0.7258, 0.7495, 0.7684, 0.7669, 0.7669},
   {0.6118, 0.6218, 0.6418, 0.6612, 0.6818, 0.7032, 0.7260, 0.7477, 0.7629, 0.7828, 0.7828, 0.7828},
   {0.6293, 0.6453, 0.6653, 0.6853, 0.7053, 0.7232, 0.7485, 0.7647, 0.7886, 0.8156, 0.8156, 0.8156},
   {0.6440, 0.6675, 0.6835, 0.7044, 0.7273, 0.7498, 0.7608, 0.7904, 0.8262, 0.8484, 0.8554, 0.8554},
   {0.6634, 0.6807, 0.6989, 0.7137, 0.7373, 0.7674, 0.7839, 0.8223, 0.8623, 0.8923, 0.8923, 0.8923},
   {9.6849, 0.6911, 0.6976, 0.7182, 0.7484, 0.7843, 0.8051, 0.8489, 0.8889, 0.9089, 0.9089, 0.9089},
   {0.6841, 0.6941, 0.7043, 0.7161, 0.7412, 0.7742, 0.7964, 0.8293, 0.8693, 0.8893, 0.8893, 0.8893},
   {0.6774, 0.6784, 0.6812, 0.6937, 0.7204, 0.7475, 0.7726, 0.8155, 0.8410, 0.8710, 0.8710, 0.8710},
   {0.6546, 0.6562, 0.6661, 0.6758, 0.7019, 0.7350, 0.7602, 0.8052, 0.8356, 0.8656, 0.8656, 0.8656},
   {0.6348, 0.6262, 0.6581, 0.6744, 0.6888, 0.7221, 0.7463, 0.7976, 0.8249, 0.8249, 0.8649, 0.8649},
   {0.6159, 0.6180, 0.6359, 0.6491, 0.6616, 0.7069, 0.7218, 0.7607, 0.8015, 0.8423, 0.8591, 0.8591},
   {0.6059, 0.6059, 0.6159, 0.6291, 0.6480, 0.6865, 0.7061, 0.7491, 0.7814, 0.8297, 0.8297, 0.8297}
};

// yAxis values are in kPa
float yAxisSA[] = {21, 28, 34, 40, 46, 53, 59, 65, 72, 78, 84}; // [kPa]

// xAxis values are in RPM
float xAxisSA[] = {1200, 1680, 1980, 2460, 3000, 3540, 4020, 4500, 4980, 5520, 6000, 7000, 7980, 9000}; // [RPM]

// VE data is in degrees from TDC 
float dataSA[][X_AXIS_SA_WIDTH] = {
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3},
   {12.0, 15.0, 20.3, 22.5, 24.8, 30.0, 30.8, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3, 32.3}
};


/*  These are declarations so that programs that #include "tuning.h"
   can also be aware of the SATable and VETable. */
extern table2D_t SATable;
extern table2D_t VETable;

/*    Here we allocate space for our various table_t's and
   and assign values into each field. */
table2D_t SATable = {xAxisSA, yAxisSA, (float*)dataSA, X_AXIS_SA_WIDTH};
table2D_t VETable = {xAxisVE, yAxisVE, (float*)dataVE, X_AXIS_VE_WIDTH};